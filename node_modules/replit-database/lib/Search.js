
// The main part of the searching algorithm
export default function (where, obj) {
  if (Array.isArray(where) && Array.isArray(obj)) {
    loop1:
    for (const i of where) {
      if (typeof i === 'object') {
        if (Array.isArray(i)) {
          for (const j of i) {
            if (obj.includes(j)) {
              continue loop1;
            }
          }
          return false;
        } else {
          continue;
        }
      } else {
        if (obj.includes(i)) {
          continue;
        } else {
          return false;
        }
      }
    }
  } else if (![Array.isArray(where), Array.isArray(obj)].includes(true)) {
    for (const i in where) {
      if (typeof where[i] === typeof obj[i]) {
        if (typeof where[i] !== 'object') {
          if (where[i] === obj[i]) {
            continue;
          } else {
            return false;
          }
        } else {
          if (search(where[i], obj[i])) {
            continue;
          } else {
            return false;
          }
        }
      } else if (Array.isArray(where[i]) && typeof obj[i] !== 'object') {
        if (where[i].includes(obj[i])) {
          continue;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  } else {
    return false;
  }
  return true;
}